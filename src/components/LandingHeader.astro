---
import Logo from "./Logo.astro";
---

<header
  id="landing-header"
  class="py-2 px-8 flex items-center fixed top-0 w-full justify-between z-40"
>
  <div class="flex flex-grow basis-0 justify-center md:justify-start">
    <Logo />
  </div>
  <nav class="hidden md:block">
    <ul
      class="flex text-sm [&>li>a]:inline-block [&>li>a]:transition-colors [&>li>a]:duration-300 [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:text-base [&>li>a]:font-medium"
    >
      <li><a href="">Model S</a></li>
      <li><a href="">Model 3</a></li>
      <li><a href="">Model X</a></li>
      <li><a href="">Model Y</a></li>
      <li><a href="">PowerWall</a></li>
      <li><a href="">Carga</a></li>
    </ul>
  </nav>
  <nav class="hidden md:flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:inline-block [&>li>a]:transition-colors [&>li>a]:duration-300 [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:text-base [&>li>a]:font-medium"
    >
      <li><a href="">Soporte</a></li>
      <li><a href="">Tienda</a></li>
      <li><a href="">Cuenta</a></li>
      <li><a href="">Men√∫</a></li>
    </ul>
  </nav>

  <div
    id="menu-backdrop"
    class="absolute bg-black/5 backdrop-blur-lg rounded translate-x-[var(--left)] translate-y-[var(--top)] w-[var(--width)] h-[var(--height)] left-0 top-0 transition-transforms duration-500 ease-in-out opacity-0 -z-10"
  >
  </div>
</header>

<script>
  const items = document.querySelectorAll("#landing-header li");
  const menuBackdrop = document.querySelector("#menu-backdrop") as HTMLElement;

  items.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();
      menuBackdrop.style.setProperty("--left", `${left}px`);
      menuBackdrop.style.setProperty("--top", `${top}px`);
      menuBackdrop.style.setProperty("--width", `${width}px`);
      menuBackdrop.style.setProperty("--height", `${height}px`);
      menuBackdrop.style.opacity = "1";
    });

    item.addEventListener("mouseleave", () => {
      menuBackdrop.style.opacity = "0";
    });
  });
</script>
<script>
  const header = document.querySelector("#landing-header") as HTMLElement;

  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.9,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        header.style.color = color;
      }
    });
  }, observerOptions);

  const sections = document.querySelectorAll(".landing-section");

  sections.forEach((section) => {
    observer.observe(section);
  });
</script>
